import streamlit as st
import psycopg2
import datetime
import re
import time

# --- Configura√ß√£o do Banco de Dados ---
DB_CONFIG = {
    "dbname": "satisfacao",
    "user": "postgres",
    "password": "123456",
    "host": "localhost",
    "port": "5432"
}

# --- Fun√ß√µes Auxiliares ---
def conectar_db():
    """Tenta conectar ao banco de dados e retorna a conex√£o."""
    try:
        conn = psycopg2.connect(**DB_CONFIG)
        return conn
    except Exception as e:
        st.error(f"Erro ao conectar ao banco de dados: {e}")
        return None

def salvar_feedback(nome, email, nota, comentario):
    """Salva o feedback no banco de dados."""
    conn = conectar_db()
    if conn:
        try:
            with conn.cursor() as cur:
                cur.execute("""
                    INSERT INTO feedbacks (nome, email, nota, comentario, data_resposta)
                    VALUES (%s, %s, %s, %s, %s)
                """, (nome, email, nota, comentario, datetime.datetime.now()))
                conn.commit()
            st.success("‚úÖ Resposta registrada com sucesso! Obrigado pelo seu tempo.")
            return True
        except Exception as e:
            st.error(f"Erro ao salvar no banco: {e}")
            return False
        finally:
            conn.close()
    return False

def is_valid_email(email):
    """Verifica se o e-mail tem um formato v√°lido."""
    regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return re.match(regex, email)

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(page_title="Pesquisa de Satisfa√ß√£o", page_icon="üìù")
st.image("logo-sm.jpg", width=150) 
st.title("Pesquisa de Satisfa√ß√£o")

# --- Inicializa√ß√£o do Chat ---
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "assistant", "content": "Ol√°! A sua opini√£o √© muito importante para n√≥s. Gostar√≠amos de convid√°-lo(a) a responder √† nossa pesquisa de satisfa√ß√£o. Levar√° apenas alguns minutos do seu tempo e nos ajudar√° a aprimorar nossos servi√ßos e produtos para oferecer uma experi√™ncia ainda melhor. Sua participa√ß√£o √© fundamental para que possamos entender suas necessidades e expectativas. Contamos com voc√™!"}]
    
    st.session_state.stage = "inicio"
    st.session_state.feedback_data = {}

# --- Exibir hist√≥rico do chat ---
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# --- L√≥gica do Chat ---
if prompt := st.chat_input("Sua resposta"):
    # Adicionar mensagem do usu√°rio ao hist√≥rico
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # L√≥gica de resposta do assistente baseada no est√°gio da conversa
    with st.chat_message("assistant"):
        message_placeholder = st.empty()
        resposta_assistente = ""  # <- vari√°vel para armazenar a resposta do bot

        # Est√°gio 0: In√≠cio
        if st.session_state.stage == "inicio":
            resposta_assistente = "√ìtimo! Para come√ßar, qual √© o seu nome?"
            st.session_state.stage = "get_name"

        # Est√°gio 1: Obter Nome
        elif st.session_state.stage == "get_name":
            st.session_state.feedback_data['nome'] = prompt
            resposta_assistente = f"Prazer, {prompt}! üòä Agora, por favor, me informe o seu melhor e-mail."
            st.session_state.stage = "get_email"

        # Est√°gio 2: Obter Email
        elif st.session_state.stage == "get_email":
            if is_valid_email(prompt):
                st.session_state.feedback_data['email'] = prompt
                resposta_assistente = "Obrigado! Em uma escala de 0 (p√©ssima) a 10 (excelente), qual a sua satisfa√ß√£o geral com nossos servi√ßos?"
                st.session_state.stage = "get_nota"
            else:
                resposta_assistente = "‚ùå Parece que este e-mail n√£o √© v√°lido. Poderia tentar novamente, por favor?"

        # Est√°gio 3: Obter Nota
        elif st.session_state.stage == "get_nota":
            try:
                nota = int(prompt)
                if 0 <= nota <= 10:
                    st.session_state.feedback_data['nota'] = nota
                    resposta_assistente = "Entendido. Voc√™ gostaria de deixar algum coment√°rio ou sugest√£o adicional? (Se n√£o, pode apenas dizer 'n√£o')"
                    st.session_state.stage = "get_comentario"
                else:
                    resposta_assistente = "Por favor, insira um n√∫mero inteiro entre 0 e 10."
            except ValueError:
                resposta_assistente = "‚ùå Ops, isso n√£o parece ser um n√∫mero. Por favor, digite um valor de 0 a 10."

        # Est√°gio 4: Obter Coment√°rio
        elif st.session_state.stage == "get_comentario":
            comentario = prompt.strip()
            if comentario.lower() in ['nao', 'n√£o', 'n', 'no']:
                st.session_state.feedback_data['comentario'] = ""
                comentario_text = "Nenhum coment√°rio."
            else:
                st.session_state.feedback_data['comentario'] = comentario
                comentario_text = st.session_state.feedback_data['comentario']

            resposta_assistente = f"""
            Certo, vamos confirmar suas respostas:
            - **Nome:** {st.session_state.feedback_data['nome']}
            - **Email:** {st.session_state.feedback_data['email']}
            - **Nota:** {st.session_state.feedback_data['nota']}
            - **Coment√°rio:** {comentario_text}

            Posso registrar essas informa√ß√µes? (Sim/N√£o)
            """
            st.session_state.stage = "confirmacao"

        # Est√°gio 5: Confirma√ß√£o
        elif st.session_state.stage == "confirmacao":
            if prompt.lower() in ['sim', 's', 'yes', 'y']:
                resposta_assistente = "Registrando suas respostas..."
                if salvar_feedback(**st.session_state.feedback_data):
                    resposta_assistente = "Pronto! Suas respostas foram salvas com sucesso. Agradecemos muito sua colabora√ß√£o! ‚ú®"
                else:
                    resposta_assistente = "Houve um problema ao salvar suas respostas. Por favor, tente novamente mais tarde."
                st.session_state.stage = "fim"
            else:
                resposta_assistente = "Tudo bem. Se quiser, podemos recome√ßar. Basta me dizer 'ol√°' ou recarregar a p√°gina."
                st.session_state.stage = "inicio"
                st.session_state.feedback_data = {}
        
        # Est√°gio Final
        elif st.session_state.stage == "fim":
            resposta_assistente = "A pesquisa foi finalizada. Se precisar de algo mais, estou √† disposi√ß√£o!"

        # Mostrar resposta do assistente
        message_placeholder.markdown(resposta_assistente)

    # Adicionar resposta do assistente ao hist√≥rico e recarregar
    st.session_state.messages.append({"role": "assistant", "content": resposta_assistente})
    st.rerun()
